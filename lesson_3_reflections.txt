-When would you want to create a remote repository rather than keeping all you work local?
Because sometimes you need to work from a remote place, or with people that need access to the files
you're working with.

-Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
Because not every change you made is supposed to stay or be right at all, so it is better to decide when to pull changes to your local repository manually.

-Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks are copies of repositories existing on the GitHub Server and are used when you want to directly copy a repository into your GitHub Repository.
Clones are copies of repositories in your local machine from remote or local repository and are used when you want to copy all from another repository into yours.
Branches belong to the same repository and are used when you just want to make a new feature or important changes.

-What is the benefit of having a copy of the last known state of the remote stored locally?
I think it is that you keep your repository up to date, with all the changes made for remote and local.

-How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Through all I've learned in this course I realized that I wasted time not using git, it is a powerful platform 
not only for one person, but for multiple persons involved in a single project. It makes so much easier handling 
versions of code.

-When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
When a change is considerable big enough, and you're not sure if that change is going to stay or work at all. Besides it is useful when you split a project into parts and different people is responsible to develop each part. You could make a branch for every split you made, and merging all at the end when you all are sure that the whole project is working.
On the other hand I think commiting directly to master it's a little too risky, even more when a lot of people is commiting to the master.

